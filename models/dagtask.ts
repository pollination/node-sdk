/* tslint:disable */
/* eslint-disable */
/**
 * Pollination Server
 * Pollination Server OpenAPI Defintion
 *
 * The version of the OpenAPI document: v0.9.0
 * Contact: info@pollination.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { DAGTaskArgument } from './dagtask-argument';
import { DAGTaskLoop } from './dagtask-loop';
import { DAGTaskOutputs } from './dagtask-outputs';

/**
 * The instance of a function template matched with DAG inputs and outputs.
 * @export
 * @interface DAGTask
 */
export interface DAGTask {
    /**
     * The input arguments for this task
     * @type {DAGTaskArgument}
     * @memberof DAGTask
     */
    arguments?: DAGTaskArgument;
    /**
     * Dependencies are name of other DAG steps which this depends on.
     * @type {Array<string>}
     * @memberof DAGTask
     */
    dependencies?: Array<string>;
    /**
     * List of inputs to loop over.
     * @type {DAGTaskLoop}
     * @memberof DAGTask
     */
    loop?: DAGTaskLoop;
    /**
     * Name for this step. It must be unique in DAG.
     * @type {string}
     * @memberof DAGTask
     */
    name: string;
    /**
     * The outputs of this task
     * @type {DAGTaskOutputs}
     * @memberof DAGTask
     */
    outputs?: DAGTaskOutputs;
    /**
     * A path relative to the current folder context where artifacts should be saved. This is useful when performing a loop or invoking another workflow and wanting to save results in a specific folder.
     * @type {string}
     * @memberof DAGTask
     */
    sub_folder?: string;
    /**
     * Template name.
     * @type {string}
     * @memberof DAGTask
     */
    template: string;
}


